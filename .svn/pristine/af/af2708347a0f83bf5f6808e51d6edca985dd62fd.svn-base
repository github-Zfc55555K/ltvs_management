package com.ltvs.util.websocket;

import java.io.IOException;
import java.util.concurrent.CopyOnWriteArraySet;

import javax.websocket.OnClose;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.ServerEndpoint;


@ServerEndpoint("/websocket")
public class WebSocket {

	public static StringBuffer msgToWeb = new StringBuffer();
	
	private Session session;
	
	private CopyOnWriteArraySet<WebSocket> sessions = new CopyOnWriteArraySet<>();

	@OnOpen
	public void onopen(Session session) {
//		System.out.println("开启连接");
//		System.out.println(session.getId()+"打开");
		msgToWeb.setLength(0);
		sessions.add(this);
	}

	@OnClose
	public void onclose(Session session) {
//		System.out.println("结束连接");
		sessions.remove(this);
	}

	@OnMessage
	public void message(Session session, String msg) {
//		System.out.println("客户端：" + msg);
		this.session = session;
		new Thread(new Runnable() {
			@Override
			public void run() {
				while (true) {
					try {
						if(session.isOpen()){
								session.getBasicRemote().sendText(WebSocket.msgToWeb.toString());	
								Thread.sleep(1000);
						}
					} catch (IOException e) {
						e.printStackTrace();
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
			}
		}).start();;
	}
}
