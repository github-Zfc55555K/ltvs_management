/**
 * 使用高德地图
 */

var _AMAP = null; // 高德地图全局变量

$(document).ready(function () {
  $('#openEdit').on('click', openEdit);
  $('#closeEdit').on('click', closeEdit);
  init();
});

var layer = null;
layui.use('layer', function () {
  layer = layui.layer;
});
var init = function () {
  //----------------------------------------------注册地图、插件、信息窗体 ↓ -----------------------------------------
  //初始化地图
  _AMAP = new AMap.Map("container", {
    resizeEnable: true,
    pitchEnable: true,
    zoom: 14,
    pitch: 20,
    rotation: -15,
    viewMode: '3D',
    expandZoomRange: true,
    zooms: [3, 20],
    showIndoorMap: false,
    center: [113.276008, 23.200389],
    mapStyle: 'amap://styles/light'

  });
  //加载地图 插件
  _AMAP.plugin(['AMap.ControlBar', 'AMap.Scale', 'AMap.PolyEditor'], function () {//增加插件
    var controlBar = new AMap.ControlBar();
    var scale = new AMap.Scale({
      visible: true,
      bottom: 100
    });
    _AMAP.addControl(controlBar);
    _AMAP.addControl(scale);
  });

  //地图工具类
  var mapUtil = new MapUtil();
  //加载地图时查询数据
  var list = mapUtil.queryNode('/ltvs_management/getTransformerInfo', {});
  //信息窗体
  var infoWindow = new AMap.InfoWindow({ offset: new AMap.Pixel(0, -30) });
  //点击事件函数
  var markerClick = function markerClick(e) {
    infoWindow.setContent(e.target.content);
    infoWindow.open(_AMAP, e.target.getPosition());
  }
  //------------------------------------------------- 注册地图 ↑ -----------------------------------------------
  //---------------------------------------------初始化地图上加载点 ↓ -------------------------------------------
  if (list.length > 0) {
    for (var i = 0, marker; i < list.length; i++) {
      if (isNaN(parseFloat(list[i].gpsjd)) || isNaN(parseFloat(list[i].gpsjd))) {
        continue;
      }
      var marker = new AMap.Marker({
        position: [parseFloat(list[i].gpsjd), parseFloat(list[i].gpswd)],
        map: _AMAP,
        icon: mapUtil.getMarkImg(list[i].hierarchy)
      });
      marker.content = list[i].bdzbh + ' ' + list[i].bdzmc;
      marker.on('click', markerClick);
      // marker.emit('click', { target: marker });
    }
  }

  //查询第一层的折线
  var lineList = mapUtil.queryNode('/ltvs_management/getLineByLev', { lev: 1 });
  if (lineList.length > 0) {
    for (var i = 0; i < lineList.length; i++) {
      var p = mapUtil.splitPath(lineList[i].linepath);
      var polyline = new AMap.Polyline({
        path: p,
        isOutline: true,
        outlineColor: '#ccc',
        borderWeight: 3,
        strokeColor: "#000",
        strokeOpacity: 1,
        strokeWeight: 6,
        strokeStyle: "solid",
        strokeDasharray: [10, 5],
        lineJoin: 'round',
        lineCap: 'round',
        zIndex: 50,
      });
      polyline.setMap(_AMAP);
    }
  }

  //根据点的分布 自适应
  _AMAP.setFitView();
  //---------------------------------------------------初始化 加载 地图 ↑-------------------------------
  // ------------------------------------------------- 根据地图放大倍数 加载 点、折线 ↓-----------------------
  var flag = 1;//已经显示的层级标志 防止重复加载数据
  (function () {
    _AMAP.on('zoomchange', function () {
      var _zoom = _AMAP.getZoom();
      if (_zoom >= 16 && _zoom < 18) {
        if (flag < 2) {
          console.log('当前地图缩放倍数:' + _AMAP.getZoom() + '开始加载第二层数据');
          //查询分接箱
          var jboxList = mapUtil.queryNode('/ltvs_management/getjboxinfo', {});
          if (jboxList.length > 0) {
            for (var i = 0, marker; i < jboxList.length; i++) {
              if (isNaN(parseFloat(jboxList[i].gpsjd)) || isNaN(parseFloat(jboxList[i].gpsjd))) {
                continue;
              }
              var marker = new AMap.Marker({
                position: [jboxList[i].gpsjd, jboxList[i].gpswd],
                map: _AMAP,
                icon: mapUtil.getMarkImg(jboxList[i].hierarchy)
              });
              marker.content = jboxList[i].fjxbs + ' ' + jboxList[i].fjxmc;
              marker.on('click', markerClick);
            }
          }
          //查询第二层的折线
          var lineList = mapUtil.queryNode('/ltvs_management/getLineByLev', { lev: 2 });
          if (lineList.length > 0) {
            for (var i = 0; i < lineList.length; i++) {
              var p = mapUtil.splitPath(lineList[i].linepath);
              var polyline = new AMap.Polyline({
                path: p,
                isOutline: true,
                outlineColor: '#ccc',
                borderWeight: 3,
                strokeColor: "#000",
                strokeOpacity: 1,
                strokeWeight: 6,
                strokeStyle: "solid",
                strokeDasharray: [10, 5],
                lineJoin: 'round',
                lineCap: 'round',
                zIndex: 50,
              });
              polyline.setMap(_AMAP);
            }
          }
          flag++;
        }
      } else if (_zoom >= 18 && _zoom < 19) {
        if (flag < 3) {
          console.log('当前地图缩放倍数:' + _AMAP.getZoom() + '开始加载第三层数据');
          //查询台区
          var tqlist = mapUtil.queryNode('/ltvs_management/gettqinfo');
          if (tqlist.length > 0) {
            for (var i = 0, marker; i < tqlist.length; i++) {
              if (isNaN(parseFloat(tqlist[i].gpsjd)) || isNaN(parseFloat(tqlist[i].gpsjd))) {
                continue;
              }
              var marker = new AMap.Marker({
                position: [tqlist[i].gpsjd, tqlist[i].gpswd],
                map: _AMAP,
                icon: mapUtil.getMarkImg(tqlist[i].hierarchy)
              });
              marker.content = tqlist[i].tqbh + ' ' + tqlist[i].tqmc;
              marker.on('click', markerClick);
            }
          }
          //查询第三层的折线
          var lineList = mapUtil.queryNode('/ltvs_management/getLineByLev', { lev: 3 });
          if (lineList.length > 0) {
            for (var i = 0; i < lineList.length; i++) {
              var p = mapUtil.splitPath(lineList[i].linepath);
              var polyline = new AMap.Polyline({
                path: p,
                isOutline: true,
                outlineColor: '#ccc',
                borderWeight: 3,
                strokeColor: "#000",
                strokeOpacity: 1,
                strokeWeight: 2,
                strokeStyle: "solid",
                strokeDasharray: [10, 5],
                lineJoin: 'round',
                lineCap: 'round',
                zIndex: 50,
              });
              polyline.setMap(_AMAP);
            }
          }
          flag++;
        }
      } else if (_zoom >= 19) {
        if (flag < 4) {
          console.log('当前地图缩放倍数:' + _AMAP.getZoom() + '开始加载第四层数据');
          var xqlist = mapUtil.queryNode('/ltvs_management/getxqinfo');
          if (xqlist.length > 0) {
            for (var i = 0, marker; i < xqlist.length; i++) {
              if (isNaN(parseFloat(xqlist[i].gpsjd)) || isNaN(parseFloat(xqlist[i].gpsjd))) {
                continue;
              }
              var marker = new AMap.Marker({
                position: [xqlist[i].gpsjd, xqlist[i].gpswd],
                map: _AMAP,
                icon: mapUtil.getMarkImg(xqlist[i].hierarchy)
              });
              if (xqlist[i].gpsjd > 113.249983 && xqlist[i].gpsjd < 113.251708) {
                marker.content = '<a href="javascript:openWindow(' + JSON.stringify(xqlist[i]).replace(/\"/g, "'") + ');">' + xqlist[i].xqbs + ' ' + xqlist[i].xqmc + '电压: ' + Math.floor(Math.random() * 11 + 220) + 'V</a>';
              } else {
                marker.content = '<a href="javascript:openWindow(' + JSON.stringify(xqlist[i]).replace(/\"/g, "'") + ');">' + xqlist[i].xqbs + ' ' + xqlist[i].xqmc + '</a>';
              }
              //marker.content = '<a href="javascript:openWindow(' + JSON.``stringify(xqlist[i]).replace(/\"/g, "'") + ');">' + xqlist[i].xqbs + ' ' + xqlist[i].xqmc + '</a>';
              marker.on('click', markerClick);
            }
          }
          var lineList = mapUtil.queryNode('/ltvs_management/getLineByLev', { lev: 4 });
          if (lineList.length > 0) {
            for (var i = 0; i < lineList.length; i++) {
              var p = mapUtil.splitPath(lineList[i].linepath);
              var polyline = new AMap.Polyline({
                path: p,
                isOutline: true,
                outlineColor: '#ccc',
                borderWeight: 3,
                strokeColor: "#000",
                strokeOpacity: 1,
                strokeWeight: 2,
                strokeStyle: "solid",
                strokeDasharray: [10, 5],
                lineJoin: 'round',
                lineCap: 'round',
                zIndex: 50,
              });
              polyline.setMap(_AMAP);
            }
          }
          flag++;
        }
      }
    });
  })();

  //在控制台上显示点击的位置
  _AMAP.on('click', findJW);
}
// -------------- 根据地图放大倍数 加载 点、折线 ↑---------------------------------------------------

// -------------------------- 编辑折线 ↓ --------------------------------------------------
//设置折线的起始点 并生成折线
var polyEditor = null; //折线编辑类
var polyline = null; // 折线
var editBool = true;//设置编辑状态标志 true 为结束编辑
var openEdit = function () {
  if (!editBool) {
    layer.msg('error 当前状态下不可重复编辑', {
      time: 1500
    });
    return;
  }
  //设置折线初始路径
  var path = [[_AMAP.getCenter().lng, _AMAP.getCenter().lat], [_AMAP.getCenter().lng, _AMAP.getCenter().lat]];
  polyline = new AMap.Polyline({
    path: path,
    isOutline: true,
    outlineColor: '#ffeeff',
    borderWeight: 2,
    strokeColor: "#3366FF",
    strokeOpacity: 1,
    strokeWeight: 6,
    strokeStyle: "dashed",
    strokeDasharray: [10, 5],
    lineJoin: 'round',
    lineCap: 'round',
    zIndex: 50,
  })
  polyline.setMap(_AMAP);
  polyEditor = new AMap.PolyEditor(_AMAP, polyline);
  editBool = false;
  polyEditor.open();
}

var closeEdit = function () {
  if (editBool) {
    layer.msg('erroer 请开始编辑', {
      time: 1500
    });
    return;
  }
  var path = [];
  var p = polyline.getPath();
  var zoom = _AMAP.getZoom();
  for (var i = 0; i < p.length; i++) {
    var pp = [];
    pp.push(p[i].lng);
    pp.push(p[i].lat);
    path.push(pp);
  }
  layer.open({
    type: 2,
    area: ['450px', '300px'],
    fixed: false, //不固定
    content: '/ltvs_management/modules/mdmap/lineForm.html?path=' + path.toString() + '&zoom=' + _AMAP.getZoom(),
    btn: ['提交', '取消'],
    yes: function (index) {
      if (zoom < 16) {
        zoom = 1;
      } else if (16 <= zoom && zoom < 18) {
        zoom = 2;
      } else if (18 <= zoom && zoom < 19) {
        zoom = 3;
      } else if (zoom >= 19) {
        zoom = 4;
      }
      var bh = window["layui-layer-iframe" + index].callbackdata();
      if (bh == null || bh == "") {
        layer.msg('编号不能为空', { shade: 0.3 });
        return;
      }
      //后台验证编号是否存在
      $.ajax({
        url: '/ltvs_management/validateLine',
        data: {
          bh: bh
        },
        success: function (result) {
          if (result.replace(/\"/g, "") == 'ok') {
            //不存在该编号
            $.ajax({
              url: '/ltvs_management/saveLine',
              data: {
                bh: bh,
                zoom, zoom,
                path: path.toString()
              },
              success: function (res) {
                if (res.replace(/\"/g, "") == 'ok') {
                  layer.msg('保存成功', { shade: 0.3 });
                  polyEditor.close();
                  editBool = true;
                  layer.close(index);
                } else {
                  parent.layer.msg('保存失败', { shade: 0.3 });
                  layer.close(index);
                }
              },
              error: function () {
                console.log('error 保存折线信息错误');
              }
            });

          } else {
            //存在 
            layer.msg('编号已存在', { shade: 0.3 });
            return;
          }
        },
        error: function () {
          console.log('error 保存折线信息错误');
        }
      });
    },
    cancel: function () {

    }
  });
}
// ---------------------------------------- 编辑折线 ↑ -------------------------------

//------------------------------------------实时数据 ↓------------------------------
var refreshData = function (chx) {
  if (chx.checked == true) {
    var _markers = _AMAP.getAllOverlays('marker');
    var markers = [];
    var j = 0;
    for (var i = 0; i < _markers.length; i++) {
      if (_markers[i].content.toString().indexOf("电压") != -1) {
        markers[j] = _markers[i];
        j++;
      }
    }
    // (function (num) {
    //   var ar = arguments;
    //   t = setTimeout(function () {
    //     // console.log(num);
    //     markers[num].emit('click',{target:markers[num]});
    //     if (++num > markers.length - 1) num = 0;
    //     ar.callee(num);
    //   }, 1000);
    // })(0);
    var num = 0;
    t = setInterval(() => {
      markers[num].emit('click', { target: markers[num] });
      num++;
      if (num == markers.length - 1) {
        num = 0;
      }
    }, 1000);
  } else {
    clearInterval(t);
  }
}
//------------------------------------------实时数据 ↑---------------------------------------
var openWindow = function (node) {
  if (node.hasChild > 0) {
    //是否有子集 判断是否跳转
    self.location.href = "/ltvs_management/modules/mdlev/showXq.html?id=" + encodeURI(node.xqbs);
  }
}
var findJW = function (e) {
  console.log('点击的坐标为:' + e.lnglat.getLng() + ',' + e.lnglat.getLat())
}